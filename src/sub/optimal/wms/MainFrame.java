/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 15-Sep-2011, 23:55:39
 */

package sub.optimal.wms;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigInteger;
import javax.swing.JFileChooser;
import javax.swing.UIManager;

/**
 *
 * @author od451
 */
public class MainFrame extends javax.swing.JFrame {

    /** Creates new form MainFrame */
    public MainFrame() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception ex) {
            System.err.println("setting look and feel failed ... use the boring default");
        }
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbSecurityType = new javax.swing.JComboBox();
        cbEncryptType = new javax.swing.JComboBox();
        lblMacId = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        lblSSID = new javax.swing.JLabel();
        lblSecurityType = new javax.swing.JLabel();
        lblEncryptType = new javax.swing.JLabel();
        tfMacId = new javax.swing.JTextField();
        tfSSID = new javax.swing.JTextField();
        tfPassword = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        itemExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("setup for WMS- and Mobostick ");
        setLocationByPlatform(true);
        setMinimumSize(new java.awt.Dimension(310, 222));
        setResizable(false);

        cbSecurityType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "open", "WEP", "WPA", "WPA2" }));
        cbSecurityType.setSelectedIndex(3);

        cbEncryptType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TKIP", "AES", "n/a" }));
        cbEncryptType.setSelectedIndex(1);

        lblMacId.setText("MAC ID");

        lblPassword.setText("password");

        lblSSID.setText("SSID");

        lblSecurityType.setText("security type");

        lblEncryptType.setText("encryption type");

        btnSave.setText("save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        menuFile.setText("File");

        itemExit.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                System.exit(0);
            }
        });
        itemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        itemExit.setMnemonic('X');
        itemExit.setText("Exit");
        menuFile.add(itemExit);

        jMenuBar.add(menuFile);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMacId)
                            .addComponent(lblSSID)
                            .addComponent(lblPassword)
                            .addComponent(lblSecurityType)
                            .addComponent(lblEncryptType))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(cbEncryptType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbSecurityType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(tfMacId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addComponent(tfSSID, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                            .addComponent(tfPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)))
                    .addComponent(btnSave, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMacId)
                    .addComponent(tfMacId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSSID)
                    .addComponent(tfSSID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(tfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbSecurityType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSecurityType))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEncryptType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEncryptType))
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private String stringToHex(String in) {
        return String.format("%x", new BigInteger(in.getBytes()));
    }

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("where to store the WMS configuration");
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chooser.showOpenDialog(this.getComponent(0));
        String dirName = "";
        try {
            // FIXME: check return error message to the user
            if(returnVal == JFileChooser.APPROVE_OPTION) {
                dirName = chooser.getSelectedFile().getCanonicalPath();
            }
            StringBuilder sb = new StringBuilder();
            sb.append("macid=").append(tfMacId.getText()).append('\n');
            sb.append("ssid=").append(stringToHex(tfSSID.getText())).append('\n');
            sb.append("password=").append(stringToHex(tfPassword.getText())).append('\n');
            sb.append("security=").append(cbSecurityType.getSelectedIndex()).append('\n');
            sb.append("encrypt=").append(cbEncryptType.getSelectedIndex()).append('\n');
            sb.append("key=wms/WMS13295\n");
            byte[] arrByte = sb.toString().getBytes();
            FileOutputStream fos = new FileOutputStream(dirName + System.getProperty("file.separator")+ "wconfig");
            fos.write(arrByte);
            fos.flush();
            fos.close();

            String statusFName = dirName + System.getProperty("file.separator") + "status";
            File statusFile = new File(statusFName);
            statusFile.delete();

            fos = new FileOutputStream(dirName + System.getProperty("file.separator")+ "done");
            fos.write('1');
            fos.flush();
            fos.close();
        } catch (IOException ioex) {
            System.err.println("could not save the config file - " + ioex.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox cbEncryptType;
    private javax.swing.JComboBox cbSecurityType;
    private javax.swing.JMenuItem itemExit;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JLabel lblEncryptType;
    private javax.swing.JLabel lblMacId;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblSSID;
    private javax.swing.JLabel lblSecurityType;
    private javax.swing.JMenu menuFile;
    private javax.swing.JTextField tfMacId;
    private javax.swing.JTextField tfPassword;
    private javax.swing.JTextField tfSSID;
    // End of variables declaration//GEN-END:variables

}
